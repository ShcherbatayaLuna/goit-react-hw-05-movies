{"version":3,"file":"static/js/170.7c885da0.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx","utils/MovieApi.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Section = styled.section`\n  padding: 30px 0;\n`;\n\nexport const BackLink = styled(NavLink)`\n  font-family: 'Roboto', sans-serif;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 1;\n  text-decoration: none;\n  color: black;\n\n  :hover,\n  :focus {\n    color: red;\n  }\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  box-shadow: 0px 4px 4px -4px rgba(0, 0, 0, 0.25);\n`;\n\nexport const Image = styled.img`\n  margin-right: 20px;\n`;\n\nexport const BoxInfo = styled.div`\n  padding: 20px 0;\n  font-family: 'Roboto', sans-serif;\n  font-style: normal;\n  font-size: 18px;\n  line-height: 1;\n  color: black;\n`;\n\nexport const Title = styled.h2`\n  margin-top: 0;\n  margin-bottom: 20px;\n  font-weight: 700;\n`;\n\nexport const Score = styled.p`\n  margin-top: 0;\n  margin-bottom: 15px;\n  font-weight: 400;\n`;\n\nexport const TitleSecondary = styled.h3`\n  margin-top: 0;\n  margin-bottom: 15px;\n  font-weight: 600;\n`;\n\nexport const Overview = styled.p`\n  margin-top: 0;\n  margin-bottom: 15px;\n  font-weight: 400;\n`;\n\nexport const ListGenres = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\nexport const ItemGenres = styled.li`\n  margin-right: 15px;\n`;\n\nexport const Info = styled.div`\n  padding-top: 15px;\n  padding-bottom: 15px;\n  box-shadow: 0px 4px 4px -4px rgba(0, 0, 0, 0.25);\n\n  font-family: 'Roboto', sans-serif;\n  font-style: normal;\n  font-size: 18px;\n  line-height: 1;\n  color: black;\n`;\n\nexport const ItemLink = styled.li`\n  margin-bottom: 15px;\n`;\n\nexport const Link = styled(NavLink)`\n  font-weight: 400;\n  text-decoration: none;\n  color: black;\n\n  :hover,\n  :focus {\n    color: red;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { InfoMovieApi } from '../../utils/MovieApi';\nimport {\n  Section,\n  BackLink,\n  Box,\n  Image,\n  BoxInfo,\n  Title,\n  Score,\n  TitleSecondary,\n  Overview,\n  ListGenres,\n  ItemGenres,\n  Info,\n  ItemLink,\n  Link,\n} from './MovieDetails.styled';\n\nexport default function MovieDetails() {\n  const [film, setFilm] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    InfoMovieApi(movieId)\n      .then(response => setFilm(response.data))\n      .catch(error => console.log(error.message));\n  }, [movieId]);\n\n  return (\n    <Section>\n      <BackLink to={location.state?.from ?? '/'}>&#8592; Go back</BackLink>\n      {film && (\n        <>\n          {film.poster_path && (\n            <>\n              <Box>\n                <Image\n                  width=\"300\"\n                  height=\"400\"\n                  src={`https://image.tmdb.org/t/p/w500/${film.poster_path}`}\n                  alt={film.title}\n                />\n                <BoxInfo>\n                  <Title>{film.title}</Title>\n                  <Score>\n                    User Score: {Math.round(film.vote_average * 10)}%\n                  </Score>\n                  <TitleSecondary>Overview</TitleSecondary>\n                  <Overview>{film.overview}</Overview>\n                  <TitleSecondary>Genres</TitleSecondary>\n                  <ListGenres>\n                    {film.genres.map(({ id, name }) => (\n                      <ItemGenres key={id}>{name}</ItemGenres>\n                    ))}\n                  </ListGenres>\n                </BoxInfo>\n              </Box>\n              <Info>\n                <TitleSecondary>Additional information</TitleSecondary>\n                <ul>\n                  <ItemLink>\n                    <Link to=\"cast\" state={{ from: location.state.from }}>\n                      {''}\n                      Cast{''}\n                    </Link>\n                  </ItemLink>\n                  <li>\n                    <Link to=\"reviews\" state={{ from: location.state.from }}>\n                      {''}\n                      Reviews{''}\n                    </Link>\n                  </li>\n                </ul>\n              </Info>\n              <Outlet />\n            </>\n          )}\n        </>\n      )}\n    </Section>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '1636f0bce8f7dccd30801ee3d3556064';\n\nexport const MovieApi = async () => {\n  const response = await axios.get(`trending/movie/day`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response;\n};\n\nexport const SearchMovieApi = async query => {\n  const response = await axios.get(`search/movie`, {\n    params: {\n      api_key: KEY,\n      query,\n    },\n  });\n  return response;\n};\n\nexport const InfoMovieApi = async movie_id => {\n  const response = await axios.get(`movie/${movie_id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response;\n};\n\nexport const CastMovieApi = async movie_id => {\n  const response = await axios.get(`movie/${movie_id}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response;\n};\n\nexport const ReviewsMovieApi = async movie_id => {\n  const response = await axios.get(`movie/${movie_id}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response;\n};\n"],"names":["Section","styled","BackLink","NavLink","Box","Image","BoxInfo","Title","Score","TitleSecondary","Overview","ListGenres","ItemGenres","Info","ItemLink","Link","MovieDetails","useState","film","setFilm","movieId","useParams","location","useLocation","useEffect","InfoMovieApi","then","response","data","catch","error","console","log","message","to","state","from","poster_path","width","height","src","alt","title","Math","round","vote_average","overview","genres","map","id","name","axios","KEY","MovieApi","params","api_key","SearchMovieApi","query","movie_id","CastMovieApi","ReviewsMovieApi"],"sourceRoot":""}
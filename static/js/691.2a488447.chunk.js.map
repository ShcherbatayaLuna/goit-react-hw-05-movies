{"version":3,"file":"static/js/691.2a488447.chunk.js","mappings":"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","sources":["pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx","utils/MovieApi.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Section = styled.section`\n  padding: 30px 0;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n\nexport const Form = styled.form`\n  padding: 3px;\n`;\n\nexport const Label = styled.label`\n  margin-right: 10px;\n`;\n\nexport const Input = styled.input`\n  width: 240px;\n  padding: 6px;\n  border: 2px solid transparent;\n  border-radius: 4px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n\n  font-family: 'Roboto', sans-serif;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1;\n\n  :hover,\n  :focus {\n    border: 2px solid #f89999;\n    cursor: pointer;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 8px 16px;\n  border: 0;\n  border-radius: 4px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n\n  font-family: 'Roboto', sans-serif;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1;\n\n  color: black;\n  background-color: #f89999;\n\n  :hover {\n    color: #f89999;\n    background-color: black;\n    cursor: pointer;\n  }\n`;\n\nexport const Loader = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n`;\n\nexport const TitleBox = styled.div`\n  width: 250px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  text-align: center;\n  padding: 0 20px;\n`;\n\nexport const Title = styled.h2`\n  font-family: 'Roboto', sans-serif;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 1;\n\n  color: black;\n`;\n","import { useEffect, useState } from 'react';\nimport { Outlet, useLocation, useSearchParams } from 'react-router-dom';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { SearchMovieApi } from 'utils/MovieApi';\nimport {\n  Section,\n  List,\n  Form,\n  Label,\n  Input,\n  Button,\n  Loader,\n  Link,\n  TitleBox,\n  Title,\n} from './Movies.styled';\n\nexport default function Movies() {\n  const [film, setFilm] = useState([]);\n  const [query, setQuery] = useState(null);\n  const [button, setButton] = useState(true);\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const searchQuery = searchParams.get('query') ?? '';\n\n  const handleChange = event => {\n    setButton(false);\n    const query = event.target.value;\n    setQuery(query !== '' ? { query } : {});\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchParams(query);\n    if (!query) {\n      setButton(true);\n    }\n  };\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n    setLoading(true);\n    SearchMovieApi(searchQuery)\n      .then(({ data }) => setFilm(data.results))\n      .catch(error => console.log(error.message))\n      .finally(() => setLoading(false));\n  }, [searchQuery]);\n\n  return (\n    <>\n      <Section>\n        <Form onSubmit={handleSubmit}>\n          <Label>\n            <Input type=\"text\" onChange={handleChange} />\n          </Label>\n          <Button disabled={button} type=\"submit\">\n            Search\n          </Button>\n        </Form>\n        {loading && (\n          <Loader>\n            <ThreeDots\n              height=\"120\"\n              width=\"120\"\n              radius=\"12\"\n              color=\"#f89999\"\n              ariaLabel=\"three-dots-loading\"\n              wrapperStyle={{}}\n              wrapperClassName=\"\"\n              visible={true}\n            />\n          </Loader>\n        )}\n      </Section>\n      <Section>\n        <List>\n          {' '}\n          {film.map(({ id, title, poster_path }) => {\n            return (\n              <li key={id}>\n                <Link to={`/movies/${id}`} state={{ from: location }}>\n                  <img\n                    width=\"290\"\n                    height='434'\n                    src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n                    alt={title}\n                  />\n                  <TitleBox>\n                  <Title>{title}</Title>\n                </TitleBox>\n                </Link>\n              </li>\n            );\n          })}\n          <Outlet />\n        </List>\n      </Section>\n    </>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '1636f0bce8f7dccd30801ee3d3556064';\n\nexport const MovieApi = async () => {\n  const response = await axios.get(`trending/movie/day`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response;\n};\n\nexport const SearchMovieApi = async query => {\n  const response = await axios.get(`search/movie`, {\n    params: {\n      api_key: KEY,\n      query,\n    },\n  });\n  return response;\n};\n\nexport const InfoMovieApi = async movie_id => {\n  const response = await axios.get(`movie/${movie_id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response;\n};\n\nexport const CastMovieApi = async movie_id => {\n  const response = await axios.get(`movie/${movie_id}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response;\n};\n\nexport const ReviewsMovieApi = async movie_id => {\n  const response = await axios.get(`movie/${movie_id}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response;\n};\n"],"names":["Section","styled","List","Form","Label","Input","Button","Loader","Link","NavLink","TitleBox","Title","Movies","useState","film","setFilm","query","setQuery","button","setButton","loading","setLoading","useSearchParams","searchParams","setSearchParams","location","useLocation","searchQuery","get","useEffect","SearchMovieApi","then","data","results","catch","error","console","log","message","finally","onSubmit","event","preventDefault","type","onChange","target","value","disabled","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClassName","visible","map","id","title","poster_path","to","state","from","src","alt","axios","KEY","MovieApi","params","api_key","response","InfoMovieApi","movie_id","CastMovieApi","ReviewsMovieApi"],"sourceRoot":""}
{"version":3,"file":"static/js/736.9407a7aa.chunk.js","mappings":"yPAEaA,EAAOC,EAAAA,GAAAA,GAAH,0DAKJC,EAAWD,EAAAA,GAAAA,GAAH,kEAKRE,EAAQF,EAAAA,GAAAA,IAAH,+CAILG,EAAUH,EAAAA,GAAAA,IAAH,4OAcPI,EAAQJ,EAAAA,GAAAA,GAAH,yFAOLK,EAAYL,EAAAA,GAAAA,EAAH,2D,SChCP,SAASM,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaH,GACVI,MAAK,SAAAC,GAAQ,OAAIN,EAAQM,EAASC,KAAKR,KAA1B,IACbS,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAMG,QAAtB,GACf,GAAE,CAACX,KAGF,SAACX,EAAD,UACGS,EAAKc,OAAS,GACbd,EAAKe,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,aAAxB,OACP,UAAC1B,EAAD,YACE,SAACC,EAAD,CACE0B,MAAM,MACNC,IACEF,EAAY,0CAC2BA,GAD3B,gFAIdG,IAAKL,KAEP,UAACtB,EAAD,YACE,SAACC,EAAD,UAAQsB,KACR,UAACrB,EAAD,yBAAuBoB,UAZZD,EADR,KAmBhB,C,8LCnCDO,EAAAA,GAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAM,mCAECC,EAAQ,mCAAG,oGACCF,EAAAA,GAAAA,IAAA,qBAAgC,CACrDG,OAAQ,CACNC,QAASH,KAHS,cAChBjB,EADgB,yBAMfA,GANe,2CAAH,qDASRqB,EAAc,mCAAG,WAAMC,GAAN,uFACLN,EAAAA,GAAAA,IAAA,eAA0B,CAC/CG,OAAQ,CACNC,QAASH,EACTK,MAAAA,KAJwB,cACtBtB,EADsB,yBAOrBA,GAPqB,2CAAH,sDAUduB,EAAY,mCAAG,WAAMC,GAAN,uFACHR,EAAAA,GAAAA,IAAA,gBAAmBQ,GAAY,CACpDL,OAAQ,CACNC,QAASH,KAHa,cACpBjB,EADoB,yBAMnBA,GANmB,2CAAH,sDASZF,EAAY,mCAAG,WAAM0B,GAAN,uFACHR,EAAAA,GAAAA,IAAA,gBAAmBQ,EAAnB,YAAuC,CAC5DL,OAAQ,CACNC,QAASH,KAHa,cACpBjB,EADoB,yBAMnBA,GANmB,2CAAH,sDASZyB,EAAe,mCAAG,WAAMD,GAAN,uFACNR,EAAAA,GAAAA,IAAA,gBAAmBQ,EAAnB,YAAuC,CAC5DL,OAAQ,CACNC,QAASH,KAHgB,cACvBjB,EADuB,yBAMtBA,GANsB,2CAAH,qD","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","utils/MovieApi.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 30px 0;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  margin-bottom: 20px;\n`;\n\nexport const Image = styled.img`\n  margin-right: 20px;\n`;\n\nexport const BoxText = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  padding: 20px;\n\n  font-family: 'Roboto', sans-serif;\n  font-style: normal;\n  font-size: 18px;\n  line-height: 1;\n  color: black;\n`;\n\nexport const Title = styled.h2`\n  margin-top: 0;\n  margin-bottom: 10px;\n\n  font-weight: 600;\n`;\n\nexport const Character = styled.p`\n  margin: 0;\n  font-weight: 400;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { CastMovieApi } from '../../utils/MovieApi';\nimport { List, ListItem, Image, BoxText, Title, Character } from './Cast.styled';\n\nexport default function Cast() {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    CastMovieApi(movieId)\n      .then(response => setCast(response.data.cast))\n      .catch(error => console.log(error.message));\n  }, [movieId]);\n\n  return (\n    <List>\n      {cast.length > 0 &&\n        cast.map(({ id, character, name, profile_path }) => (\n          <ListItem key={id}>\n            <Image\n              width=\"120\"\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                  : `https://sirinc2.org/branch129/wp-content/uploads/2019/04/no-photo-icon-22.png`\n              }\n              alt={character}\n            />\n            <BoxText>\n              <Title>{name}</Title>\n              <Character>Character: {character}</Character>\n            </BoxText>\n          </ListItem>\n        ))}\n    </List>\n  );\n}\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '1636f0bce8f7dccd30801ee3d3556064';\n\nexport const MovieApi = async () => {\n  const response = await axios.get(`trending/movie/day`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response;\n};\n\nexport const SearchMovieApi = async query => {\n  const response = await axios.get(`search/movie`, {\n    params: {\n      api_key: KEY,\n      query,\n    },\n  });\n  return response;\n};\n\nexport const InfoMovieApi = async movie_id => {\n  const response = await axios.get(`movie/${movie_id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response;\n};\n\nexport const CastMovieApi = async movie_id => {\n  const response = await axios.get(`movie/${movie_id}/credits`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response;\n};\n\nexport const ReviewsMovieApi = async movie_id => {\n  const response = await axios.get(`movie/${movie_id}/reviews`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response;\n};\n"],"names":["List","styled","ListItem","Image","BoxText","Title","Character","Cast","useState","cast","setCast","movieId","useParams","useEffect","CastMovieApi","then","response","data","catch","error","console","log","message","length","map","id","character","name","profile_path","width","src","alt","axios","KEY","MovieApi","params","api_key","SearchMovieApi","query","InfoMovieApi","movie_id","ReviewsMovieApi"],"sourceRoot":""}